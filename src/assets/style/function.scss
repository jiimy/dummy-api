$breakpoints-mobile : 768;

@function pxtovw-mo($target) {
  $vw-content: ($breakpoints-mobile * 0.01) * 1px;
  $result: ();
  $length: length($target);

  @for $i from 1 through $length {
    $result: append($result, nth($target, $i) / $vw-content +vw);
  }

  @return $result;
}

@mixin vw-convert($value, $size, $mode: 'ta', $flag: 'false') {

  // mo
  @if ($mode=='mo') {
    @media (max-width: ($breakpoints-mobile + 'px')) {
      @if($flag==true) {
        #{$value}: pxtovw-mo($size) !important;
      }
      #{$value} : pxtovw-mo($size);
    }
  }
}

@mixin media-mo() {
  @media (max-width: ($breakpoints-mobile+'px')) {
    @content;
  }
}